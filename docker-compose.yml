version: '3'

services:

  fast_api:
    container_name: "fast_api"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - "./src:/opt/app"
    ports:
      - 8000:8000
    command: uvicorn main:app --workers 4 --reload --log-level=debug --host 0.0.0.0 --port 8000
    depends_on:
      - redis
    env_file:
      - .env

  redis:
    image: redis:latest
    restart: always
    #hardcode password
    command: redis-server --appendonly yes --replica-read-only no --requirepass 8QQnjhHdnAj9ZgVpB5AZSDpZCHpLne
    hostname: redis
    ports:
      - 6379:6379

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus_data/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis

  telegraf:
    image: telegraf:1.8
    container_name: telegraf
    restart: always
    volumes:
      - ./monitor/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    ports:
      - '9100:9100'

#  nginx:
#    image: nginx:latest
#    ports:
#      - "80:80"
#    volumes:
#      - ./conf/nginx.conf:/etc/nginx.conf:ro
#    depends_on:
#      - fast_api

volumes:
  grafana-storage:
  media_volume:
